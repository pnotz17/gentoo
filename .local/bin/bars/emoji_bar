#!/bin/sh

LINUX() {
LINUX=$(uname -r)
echo  "üè† $LINUX"
}

MAIL() {
COUNT=`curl -su user:pass https://mail.google.com/mail/feed/atom || echo "<fullcount>unknown number of</fullcount>"`
COUNT=`echo "$COUNT" | grep -oPm1 "(?<=<fullcount>)[^<]+" `
echo  "üì´ $COUNT"
}

UPTIME() {
UPTIME=$(uptime | sed 's/.*up \([^,]*\), .*/\1/')
echo "$UPTIME"
}

DISK() {
hddfree="$(df -Ph /dev/sda1 | awk '$3 ~ /[0-9]+/ {print $4}')"
echo  "üíæÔ∏è $hddfree"
}

CPUTEMP() {
TEMP=`sensors|awk 'BEGIN{i=0;t=0;b=0}/id [0-9]/{b=$4};/Core/{++i;t+=$3}END{if(i>0){printf("%0.1f\n",t/i)}else{sub(/[^0-9.]/,"",b);print b}}'`"C"
echo "üî• $TEMP"
}

CPUFREQUENCY() {
CPU=$(awk '{u=$2+$4; t=$2+$4+$5;if (NR==1){u1=u; t1=t;} else printf("%d%%", ($2+$4-u1) * 100 / (t-t1) "%");}' <(grep 'cpu ' /proc/stat) <(sleep 0.5; grep 'cpu ' /proc/stat))
echo "üñ•Ô∏è $CPU"
}

RAM() {
USED=$(free | awk '/^Mem/ { printf("%.2f%\n", $3/$2 * 100.0) }')
echo "üíª $USED"
} 

CLOCK() {
TIME=$(date +"%b %d, %R")
echo "üìÜ $TIME"
}

WEATHER() {
FORECAST=$(curl 'https://wttr.in/YOURCITY,YOURCOUNTRY?format=%t')
echo "üåà $FORECAST"
}

ALSA() {
MONO=$(amixer -M sget Master | grep Mono: | awk '{ print $2 }')
if [ -z "$MONO" ]; then
	MUTED=$(amixer -M sget Master | awk 'FNR == 6 { print $7 }' | sed 's/[][]//g')
	VOL=$(amixer -M sget Master | awk 'FNR == 6 { print $5 }' | sed 's/[][]//g; s/%//g')
else
	MUTED=$(amixer -M sget Master | awk 'FNR == 5 { print $6 }' | sed 's/[][]//g')
	VOL=$(amixer -M sget Master | awk 'FNR == 5 { print $4 }' | sed 's/[][]//g; s/%//g')
fi

if [ "$MUTED" = "off" ]; then
	echo "üîá MUTED"
else
	if [ "$VOL" -ge 65 ]; then
		echo "üîä $VOL%"
	elif [ "$VOL" -ge 40 ]; then
		echo "üîâ $VOL%"
	elif [ "$VOL" -ge 0 ]; then
		echo "üîà $VOL%"	
	fi
fi
}

NETWORK() {
conntype=$(ip route | awk '/default/ { print substr($5,1,1) }')
if [ -z "$conntype" ]; then
echo "‚ÄºÔ∏è"
elif [ "$conntype" = "e" ]; then
echo "üîíÔ∏è"
elif [ "$conntype" = "w" ]; then
echo "üì∂"  
fi
printf "%s%s\n" "$icon"
}

UPSPEED() {
T1=`cat /sys/class/net/enp2s0/statistics/tx_bytes`
sleep 1
T2=`cat /sys/class/net/enp2s0/statistics/tx_bytes`
TBPS=`expr $T2 - $T1`
TKBPS=`expr $TBPS / 1024`
printf  "‚¨ÜÔ∏è $TKBPS kb"
}

DOWNSPEED() {
R1=`cat /sys/class/net/enp2s0/statistics/rx_bytes`
sleep 1
R2=`cat /sys/class/net/enp2s0/statistics/rx_bytes`
RBPS=`expr $R2 - $R1`
RKBPS=`expr $RBPS / 1024`
printf  "‚¨áÔ∏è $RKBPS kb"
}

TORRENT() {
torrents=$(transmission-remote -l)
downloading=$(echo "$torrents" | grep "Downloading\|Up & Down" | wc -l)
paused=$(echo "$torrents" | grep "Stopped" | wc -l)
seeding=$(echo "$torrents" | grep "Seeding" | wc -l)
idle=$(echo "$torrents" | grep "Idle" | wc -l)

echo "üì• $downloading üõë $paused üì§ $seeding üóÑÔ∏è $idle"
}

while true; do
	xsetroot -name "[  $(UPTIME)  ] [  $(MAIL)  ] [  $(UPSPEED)  ] [  $(DOWNSPEED)  ] [  $(DISK)  ] [  $(CPUTEMP)  ] [  $(CPUFREQUENCY)  ] [  $(RAM)  ] [  $(ALSA)  ] [  $(CLOCK)  ] [  $(NETWORK)  ]"
	#xsetroot -name "|  $(MAIL)  |  $(DISK)  |  $(CPUTEMP)  |  $(CPUFREQUENCY)  |  $(RAM)  |  $(ALSA)  |  $(UPSPEED)  |  $(DOWNSPEED)  |  $(CLOCK)  |  $(NETWORK)  |"
	#xsetroot -name "/   $(UPSPEED)   /   $(DOWNSPEED)   /   $(CPUTEMP)   /   $(CPUFREQUENCY)   /   $(RAM)   /   $(ALSA)   /   $(CLOCK)  /   $(NETWORK)   /"
	sleep 2
done &


